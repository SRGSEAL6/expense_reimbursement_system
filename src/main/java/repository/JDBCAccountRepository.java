package repository;

import Factory.SQLConnectionFactory;
import model.Employee;
import model.Position;
import org.apache.log4j.Logger;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Optional;

public class JDBCAccountRepository implements EmployeeRepository{

    private static final Logger LOG = Logger.getLogger("mts"); // singleton
    @Override
    public Optional<Employee> findByID(String number) {
        LOG.info("Loading employee: " + number);    //LOG for debugging
        try (Connection connection = SQLConnectionFactory.getConnection()){ //This will automatically close the connection
            String sqlCode = "select * from employees"; //SQL statement from postgres to get every column from employee table
            PreparedStatement ps = connection.prepareStatement(sqlCode); //Pre compiles the sqlcode
            ResultSet rs = ps.executeQuery(); //A table of data representing a database result set, which is usually generated by executing a statement that queries the database
            if (rs.next()) { //Checks if rs object has anything
                Employee employee = new Employee(rs.getString("emp_name"),rs.getString("emp_id"),Position.valueOf(rs.getString("emp_position")));
                return Optional.of(employee);
            }
        } catch (SQLException e) {
            LOG.error("Error loading employee: " + number);
            e.printStackTrace();
        }
        return Optional.empty();
    }

    @Override
    public void update(Employee employee) {

    }
}
